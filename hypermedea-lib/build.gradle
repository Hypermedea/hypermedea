/*
 * Build file for Hypermedea as a software library (a set of CArtAgO components)
 *
 */
plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

version '0.1'
group   'org.hypermedea'

repositories {
    mavenCentral()
    // artifact repository for JaCaMo-related project
    maven { url 'https://raw.github.com/jacamo-lang/mvn-repo/master' }
    // artifact repository for Linked-Data-Fu
    maven { url 'https://paul.ti.rw.fau.de/maven/repository/' }
}

dependencies {
    compileOnly group: 'org.jacamo', name: 'jacamo', version: '0.9'

    testImplementation group: 'org.jacamo', name: 'jacamo', version: '0.9'
    testImplementation 'junit:junit:4.13.1'

    // Linked Data (LD) and Web Ontology Language (OWL) dependencies
    implementation group: 'com.github.owlcs', name: 'ontapi', version: '2.1.0'
    implementation group: 'net.sourceforge.owlapi', name: 'org.semanticweb.hermit', version: '1.4.5.519'

    // Thing Description (TD) client dependencies
    // TODO include newer version of wot-td-java
    implementation group: 'ch.unisg.ics.interactions', name: 'wot-td-java', version: '0.0.1'

    // Planning Domain Description Language (PDDL) dependencies
    implementation fileTree(dir: 'lib', include: 'pddl4j-*.jar')
}

/**
 * task to create a all-in-one jar that can be used as JaCaMo library
 */
task jacamoJar(type: Jar) {
    archiveBaseName = 'hypermedea-jacamo-lib'
    from {
        configurations.runtimeClasspath
            .filter { !it.name.endsWith('pom') }
            .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

publishing {
    publications {
        lib(MavenPublication) {
            from components.java
        }
    }

    // TODO add Maven Central repo with auth
    // see https://docs.gradle.org/4.4.1/userguide/publishing_maven.html
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
